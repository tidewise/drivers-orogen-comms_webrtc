name "comms_webrtc"
# Optionally declare the version number
# version "0.1"

import_types_from "comms_webrtcTypes.hpp"
import_types_from "iodrivers_base"
import_types_from "base"

using_library "libdatachannel"
using_library "jsoncpp", typekit: true

task_context "Task" do
    needs_configuration

    # Peers can be found by:
    # 1-"one-to-one" request via a provided username, which sends your information
    # to only the node tied to that username.
    # 2-"one-to-all" request, which sends your information to everyone on the network.
    # 3-"one-to-self" request, which sends your information back to yourself.
    property "protocol", "std/string"

    # Stun server (e.g stun:stun.l.google.com:19302)
    property "stun_server", "std/string"

    # Local peer id
    property "local_peer_id", "std/string"

    # Remote peer id (if it is not given by default, the component
    # will be able to just answer first, then get the remote ip from
    # the riquired peer connection)
    property "remote_peer_id", "std/string"

    # Data channel label
    property "data_channel_label", "std/string"

    # Websocket server name (e.g. 127.0.0.1:3012)
    property "websocket_server_name", "std/string"

    # Rawdata in
    input_port "data_in", "iodrivers_base/RawPacket"

    # Rawdata out
    output_port "data_out", "iodrivers_base/RawPacket"

    port_driven
end
